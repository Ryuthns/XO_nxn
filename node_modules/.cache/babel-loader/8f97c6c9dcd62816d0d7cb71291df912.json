{"ast":null,"code":"var _jsxFileName = \"/home/ryuthns/Desktop/Coding/XO_nxn/src/Game.js\";\nimport Board from \"./Board\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      grid_num: \"\"\n    };\n  }\n\n  createTable() {\n    var data = {\n      grid_num: this.grid_num.value\n    };\n    this.setState({\n      grid_num: this.grid_num.value\n    });\n    console.log(this.state.grid_num);\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\" // onChange={this.handleChange}\n        ,\n        id: \"grid num\",\n        required: true,\n        name: \"grid num\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createTable,\n        className: \"btn btn-success\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/ryuthns/Desktop/Coding/XO_nxn/src/Game.js"],"names":["Board","React","calculateWinner","squares","lines","i","length","a","b","c","Game","Component","constructor","props","state","history","Array","fill","stepNumber","xIsNext","grid_num","createTable","data","value","setState","console","log","handleClick","slice","current","concat","jumpTo","step","render","winner","moves","map","move","desc","status"],"mappings":"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","sourcesContent":["import Board from \"./Board\"\nimport React from \"react\";\n\nfunction calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n}\n\n\nclass Game extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          history: [{\n            squares: Array(9).fill(null),\n          }],\n          stepNumber: 0,\n          xIsNext: true,\n          grid_num : \"\",\n        };\n    }\n\n    createTable(){\n        var data ={\n          grid_num:this.grid_num.value\n        }\n        this.setState({\n          grid_num: this.grid_num.value\n        })\n        console.log(this.state.grid_num)\n    }\n   \n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n          return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n          history: history.concat([{\n            squares: squares,\n          }]),\n          stepNumber: history.length,\n          xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0,\n      });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n          const desc = move ?\n            'Go to move #' + move :\n            'Go to game start';\n          return (\n            <li>\n              <button onClick={() => this.jumpTo(move)}>{desc}</button>\n            </li>\n          );\n        });\n\n        let status;\n        if (winner) {\n        status = 'Winner: ' + winner;\n        } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n            <div className=\"game\">\n              <input\n                type=\"number\"\n                // onChange={this.handleChange}\n                id=\"grid num\"\n                required\n                name=\"grid num\"\n              />\n              <button onClick={this.createTable} className=\"btn btn-success\">\n                Create\n              </button>\n              <div className=\"game-board\">\n                <Board\n                  squares={current.squares}\n                  onClick={(i) => this.handleClick(i)}\n                />\n              </div>\n              <div className=\"game-info\">\n                <div>{status}</div>\n                <ol>{moves}</ol>\n              </div>\n            </div>\n        );\n    }\n  }\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}